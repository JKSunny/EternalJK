@echo off

set "VSCMD_START_DIR=%CD%"
call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\VsDevCmd.bat"

set tools_dir=tools
set bh=%tools_dir%\bin2hex.exe
set bh_cpp=%tools_dir%\bin2hex.c
if not exist %bh% (
    cl.exe /EHsc /nologo /Fe%tools_dir%\ /Fo%tools_dir%\ %bh_cpp%
)

set bs=%tools_dir%\bindshader.exe
set bs_cpp=%tools_dir%\bindshader.c
if not exist %bs% (
    cl.exe /EHsc /nologo /Fe%tools_dir%\ /Fo%tools_dir%\ %bs_cpp%
)

set PATH=%tools_dir%;%PATH%

set glsl=glsl\
set cl=%VULKAN_SDK%\Bin\glslangValidator.exe
set tmpf=spirv\data.spv
set outf=+spirv\shader_data.c
set outfb=+spirv\shader_binding.c

echo %bh%

mkdir spirv

del /Q spirv\shader_data.c
del /Q spirv\shader_binding.c
del /Q "%tmpf%"

@rem compile individual shaders

for %%f in (%glsl%*.vert) do (
    "%cl%" -S vert -V -o "%tmpf%" "%%f"
    "%bh%" "%tmpf%" %outf% %%~nf_vert_spv
    del /Q "%tmpf%"
)

for %%f in (%glsl%*.frag) do (
    "%cl%" -S frag -V -o "%tmpf%" "%%f"
    "%bh%" "%tmpf%" %outf% %%~nf_frag_spv
    del /Q "%tmpf%"
)

for %%f in (%glsl%*.geom) do (
    "%cl%" -S geom -V -o "%tmpf%" "%%f"
    "%bh%" "%tmpf%" %outf% %%~nf_geom_spv
    del /Q "%tmpf%"
)

for %%f in (%glsl%*.comp) do (
    "%cl%" -S comp -V -o "%tmpf%" "%%f"
    "%bh%" "%tmpf%" %outf% %%~nf_comp_spv
    del /Q "%tmpf%"
)

"%cl%" -S vert -V -o "%tmpf%" %glsl%gen_vert.tmpl -DUSE_CL0_IDENT
"%bh%" "%tmpf%" %outf% vert_tx0_ident

"%cl%" -S frag -V -o "%tmpf%" %glsl%gen_frag.tmpl -DUSE_CL0_IDENT
"%bh%" "%tmpf%" %outf% frag_tx0_ident

"%cl%" -S frag -V -o "%tmpf%" %glsl%gen_frag.tmpl -DUSE_ATEST -DUSE_DF
"%bh%" "%tmpf%" %outf% frag_tx0_df

@rem compile lighting shader variations from templates

"%cl%" -S vert -V -o "%tmpf%" %glsl%light_vert.tmpl
"%bh%" "%tmpf%" %outf% vert_light

"%cl%" -S vert -V -o "%tmpf%" %glsl%light_vert.tmpl -DUSE_FOG
"%bh%" "%tmpf%" %outf% vert_light_fog

"%cl%" -S frag -V -o "%tmpf%" %glsl%light_frag.tmpl
"%bh%" "%tmpf%" %outf% frag_light

"%cl%" -S frag -V -o "%tmpf%" %glsl%light_frag.tmpl -DUSE_FOG 
"%bh%" "%tmpf%" %outf% frag_light_fog

"%cl%" -S frag -V -o "%tmpf%" %glsl%light_frag.tmpl -DUSE_LINE
"%bh%" "%tmpf%" %outf% frag_light_line

"%cl%" -S frag -V -o "%tmpf%" %glsl%light_frag.tmpl -DUSE_LINE -DUSE_FOG
"%bh%" "%tmpf%" %outf% frag_light_line_fog

@rem compile surface sprites from templates
"%cl%" -S vert -V -o "%tmpf%" %glsl%surface_sprite_vert.tmpl
"%bh%" "%tmpf%" %outf% vert_surface_sprites

"%cl%" -S vert -V -o "%tmpf%" %glsl%surface_sprite_vert.tmpl  -DUSE_FOG
"%bh%" "%tmpf%" %outf% vert_surface_sprites_fog

"%cl%" -S frag -V -o "%tmpf%" %glsl%surface_sprite_frag.tmpl -DUSE_ATEST
"%bh%" "%tmpf%" %outf% frag_surface_sprites

"%cl%" -S frag -V -o "%tmpf%" %glsl%surface_sprite_frag.tmpl  -DUSE_ATEST -DUSE_FOG
"%bh%" "%tmpf%" %outf% frag_surface_sprites_fog

@rem template shader identifiers and flags
set "vbo[0]="
set "vbo[1]=-DUSE_VBO_GHOUL2"
set "vbo[2]=-DUSE_VBO_MDV"
set "vbo_id[0]="
set "vbo_id[1]=ghoul2_"
set "vbo_id[2]=mdv_"

@rem use this for fastlight or generic type later
set "fastlight[0]="
set "fastlight[1]=-DUSE_FAST_LIGHT"
set "fastlight_id[0]="
set "fastlight_id[1]=fastlight_"

set "light[0]="
set "light[1]=-DUSE_LIGHTMAP"
set "light[2]=-DUSE_LIGHT_VECTOR"
set "light[3]=-DUSE_LIGHT_VERTEX"
set "light_id[0]="
set "light_id[1]=lightmap_"
set "light_id[2]=vector_"
set "light_id[3]=vertex_"

set "tx[0]="
set "tx[1]=-DUSE_TX1"
set "tx[2]=-DUSE_TX2"
set "tx_id[0]=single"
set "tx_id[1]=double"
set "tx_id[2]=triple"

set "cl[1]=-DUSE_CL1"
set "cl[2]=-DUSE_CL2"
set "cl_id[1]=cl"
set "cl_id[2]=cl"

set "env[0]="
set "env[1]=-DUSE_ENV"
set "env_id[0]="
set "env_id[1]=_env"

set "fog[0]="
set "fog[1]=-DUSE_FOG"
set "fog_id[0]="
set "fog_id[1]=_fog"

SETLOCAL EnableDelayedExpansion

"%bs%" %outfb% "// this file is autogenerated during shader compilation"
"%bs%" %outfb% "static void vk_set_shader_name( VkShaderModule shader, const char *name ) {"
"%bs%" %outfb% "    VK_SET_OBJECT_NAME( shader, name, VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT );"
"%bs%" %outfb% "}"

"%bs%" %outfb% "void vk_bind_generated_shaders( void ){"

@rem compile generic shader variations from templates
@rem vertex shader
for /L %%i in ( 0,1,2 ) do (                		@rem vbo 
    call :compile_refraction_vertex_shader %%i

 	for /L %%j in ( 0,1,1 ) do (                	@rem fastlight 
		for /L %%k in ( 0,1,3 ) do (                @rem light 
			for /L %%l in ( 0,1,2 ) do (            @rem tx   
				for /L %%m in ( 0,1,1 ) do (        @rem +env
					for /L %%n in ( 0,1,1 ) do (    @rem +fog
						call :compile_vertex_shader %%i, %%j, %%k, %%l, %%m, %%n
					)
				)
			)
		)
	)
)

@rem fragment shader
for /L %%i in ( 0,1,1 ) do (                	@rem fastlight
	for /L %%j in ( 0,1,3 ) do (                @rem light
		for /L %%k in ( 0,1,2 ) do (            @rem tx 
			for /L %%l in ( 0,1,1 ) do (        @rem +fog
				call :compile_fragment_shader %%i, %%j, %%k, %%l
			)
		)
	)
)

del /Q "%tmpf%"

"%bs%" %outfb% "}"

pause

@rem refraction shaders
:compile_refraction_vertex_shader
    "%cl%" -S vert -V -o "%tmpf%" %glsl%refraction.tmpl !vbo[%1]!
    "%bh%" "%tmpf%" %outf% refraction_!vbo_id[%1]!
    "%bs%" %outfb% "    vk.shaders.refraction_vs[%1] = SHADER_MODULE( refraction_!vbo_id[%1]! );"
	"%bs%" %outfb% "    vk_set_shader_name( vk.shaders.refraction_vs[%1], ""refraction_!vbo_id[%1]!"" );"
exit /B

:compile_vertex_shader
    "%cl%" -S vert -V -o "%tmpf%" %glsl%gen_vert.tmpl !vbo[%1]! !fastlight[%2]! !light[%3]! !tx[%4]! !env[%5]! !fog[%6]!
    "%bh%" "%tmpf%" %outf% vert_!vbo_id[%1]!!fastlight_id[%2]!!light_id[%3]!!tx_id[%4]!!env_id[%5]!!fog_id[%6]!
	"%bs%" %outfb% "    vk.shaders.vert.gen[%1][%2][%3][%4][0][%5][%6] = SHADER_MODULE( vert_!vbo_id[%1]!!fastlight_id[%2]!!light_id[%3]!!tx_id[%4]!!env_id[%5]!!fog_id[%6]! );"
	"%bs%" %outfb% "    vk_set_shader_name( vk.shaders.vert.gen[%1][%2][%3][%4][0][%5][%6], ""vert_!vbo_id[%1]!!fastlight_id[%2]!!light_id[%3]!!tx_id[%4]!!env_id[%5]!!fog_id[%6]!"" );"

    @rem +cl
    if %4 equ 0 goto continue
        "%cl%" -S vert -V -o "%tmpf%" %glsl%gen_vert.tmpl !vbo[%1]! !fastlight[%2]! !light[%3]! !tx[%4]! !cl[%4]! !env[%5]! !fog[%6]!
        "%bh%" "%tmpf%" %outf% vert_!vbo_id[%1]!!fastlight_id[%2]!!light_id[%3]!!tx_id[%4]!_!cl_id[%4]!!env_id[%5]!!fog_id[%6]!
		"%bs%" %outfb% "    vk.shaders.vert.gen[%1][%2][%3][%4][1][%5][%6] = SHADER_MODULE( vert_!vbo_id[%1]!!fastlight_id[%2]!!light_id[%3]!!tx_id[%4]!_!cl_id[%4]!!env_id[%5]!!fog_id[%6]! );"
		"%bs%" %outfb% "    vk_set_shader_name( vk.shaders.vert.gen[%1][%2][%3][%4][1][%5][%6], ""vert_!vbo_id[%1]!!fastlight_id[%2]!!light_id[%3]!!tx_id[%4]!_!cl_id[%4]!!env_id[%5]!!fog_id[%6]!"" );"
    :continue
exit /B

:compile_fragment_shader
    set "flags=!fastlight[%1]! !light[%2]! !tx[%3]! !fog[%4]!"
    set "name=!fastlight_id[%1]!!light_id[%2]!!tx_id[%3]!!fog_id[%4]!"
    if %3 equ 0 ( set "flags=%flags% -DUSE_ATEST" )

    "%cl%" -S frag -V -o "%tmpf%" %glsl%gen_frag.tmpl %flags%
    "%bh%" "%tmpf%" %outf% frag_%name%
	"%bs%" %outfb% "    vk.shaders.frag.gen[%1][%2][%3][0][%4] = SHADER_MODULE( frag_%name% );"
	"%bs%" %outfb% "    vk_set_shader_name( vk.shaders.frag.gen[%1][%2][%3][0][%4], ""frag_%name%"" );"
	
    @rem +cl
    if %3 equ 0 goto continue
        "%cl%" -S frag -V -o "%tmpf%" %glsl%gen_frag.tmpl !fastlight[%1]! !light[%2]! !tx[%3]! !cl[%3]! !fog[%4]!
        "%bh%" "%tmpf%" %outf% frag_!fastlight_id[%1]!!light_id[%2]!!tx_id[%3]!_!cl_id[%3]!!fog_id[%4]!
		"%bs%" %outfb% "    vk.shaders.frag.gen[%1][%2][%3][1][%4] = SHADER_MODULE( frag_!fastlight_id[%1]!!light_id[%2]!!tx_id[%3]!_!cl_id[%3]!!fog_id[%4]! );"
		"%bs%" %outfb% "    vk_set_shader_name( vk.shaders.frag.gen[%1][%2][%3][1][%4], ""frag_!fastlight_id[%1]!!light_id[%2]!!tx_id[%3]!_!cl_id[%3]!!fog_id[%4]!"" );"
    :continue
exit /B